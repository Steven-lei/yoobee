target:

1. Create VPC
2. Create Internetgateway
3. Create Routetable allowing internet connection
4. Create subnets: vpnsubnets, public subnets, private subnets
4. Create SecurityGroup: vpn,web,db  vpn->web->db
5. Associate route table with each subnet
6. Create EC2 with openvpn image
7. Create launch template(using golden image)
7. Create Autoscaling group
8. Create Load Balancer (using certificate from ACM)
9. create SNS (for launching EC2,terminating EC2, creating Snapshot)
10. Create Lambda function to create Snapshot(Triggered by scheduler)
11. Create RDS.
12. Create Webserver(to create a test webserver and use it to create a golden image)
13. Create S3 (Lambda function writes data to it )

#prerequisite

1.  terraform
2.  aws cli
3.  Create Key Pair (optional)
4.  Create Secrets for RDS


#variables(variables.tf)
prefix for tags prefix such as: yoobee-vpc
region region to deploy
vpc_cidr  
public_subnet_cidr
private_subnet_cidr
public_az
private_az
custom_ami_id specified openvpn ami. using default ami in each region if not defined
openvpn_ami_map define the default ami in each region.

############################# TERRAFORM ###############################################
#ensure terraform is installed and exported to path

configure environment variables

#download url: https://www.terraform.io/downloads.html

#example
nano ~/.bashrc
export PATH=$PATH:/c/terraformbins
source ~/.bashrc

$ terraform -v
Terraform v1.11.4
on windows_amd64

- provider registry.terraform.io/hashicorp/aws v5.97.0

################################## AWS CLI #################################################
#ensure AWS CLI is installed and configured
#download url: https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html
C:\Program Files\Amazon\AWSCLIV2\aws.exe

#example (export to my gitbash):
nano ~/.bashrc
export PATH="/c/Program Files/Amazon/AWSCLIV2/:$PATH"
source ~/.bashrc

$ aws --version
aws-cli/2.15.44 Python/3.11.8 Windows/10 exe/AMD64 prompt/off

#cofigure Access

$ aws configure
AWS Access Key ID [****************YDBL]:
AWS Secret Access Key [****************kF+h]:
Default region name [us-east-1]:
Default output format [json]:

################################### KEY PAIR ###################################
mkdir ~/.ssh/ -p
ssh-keygen -t rsa -b 4096 -f ~/.ssh/yoobee-aws-key


#################################### Secret Manager ###########################
aws secretsmanager create-secret \
  --name rds/wordpress \
  --description "Credentials for MySQL RDS instance" \
  --secret-string '{"db_name":"wordpress", "username":"wordpress","password":"StrongP0ssw0rd123","dbhost":""}'

#
# do net need to update the secrets as we have updated it using t /erraform
# aws secretsmanager update-secret \
#   --secret-id rds/wordpress \
#   --secret-string '{"db_name":"wordpress", "username":"wordpress","password":"StrongP0ssw0rd123","dbhost":"yoobee-db.ckryao66wbec.us-east-1.rds.amazonaws.com"}'


#secrets are paid services, delete it if not needed
aws secretsmanager delete-secret \
  --secret-id rds/wordpress \
  --force-delete-without-recovery 
######################################## DEPLOYMENT ##############################

#init
terraform init

#validate
terraform validate

#plan
terraform plan

#apply
terraform apply

#destroy
terraform destroy
